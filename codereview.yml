version: 0.2

env:
  secrets-manager: 
    SONARQUBE_TOKEN: odepipeline/sonar/proj1-Z7NypM:sonartoken

phases:
  install:
    runtime-versions:
      java: openjdk11
      
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - sonar_host_url="https://sonarcloud.io"
      - sonar_token=$(aws secretsmanager get-secret-value --secret-id codepipeline/sonar/proj1 | jq -r '.SecretString' | jq -r '.sonartoken')
      - |
        pwd;
        cd /opt ;
        pwd ;
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip ;
        unzip sonar-scanner-cli-4.2.0.1873-linux.zip ;
        mv sonar-scanner-4.2.0.1873-linux sonar-scanner ;
        rm sonar-scanner-cli-4.2.0.1873-linux.zip* ;
        export PATH=$PATH:/opt/sonar-scanner/bin ;
        cd -
      
  build:
    commands:
      - echo $sonar_token $sonar.host.url $sonar.projectKey  $sonar.organization
      - result=`sonar-scanner -X `
      - sonar_task_id=$(echo $result | egrep -o "task\?id=[^ ]+" | cut -d'=' -f2)
      - echo $sonar_task_id
      - | # Allow time for SonarQube Background Task to complete
        stat="PENDING";
        while [ "$stat" != "SUCCESS" ]; do
          if [ $stat = "FAILED" ] || [ $stat = "CANCELLED" ]; then
            echo "SonarCloud task $sonar_task_id failed";
            exit 1;
          fi
          stat=$(curl -u $sonar_token:"" $sonar_host_url/api/ce/task\?id=$sonar_task_id | jq -r '.task.status');
          echo "SonarQube analysis status is $stat";
          sleep 5;
        done
        sonar_analysis_id=$(curl -u $sonar_token:"" $sonar_host_url/api/ce/task\?id=$sonar_task_id | jq -r '.task.analysisId')
        quality_status=$(curl -u $sonar_token:"" $sonar_host_url/api/qualitygates/project_status\?analysisId=$sonar_analysis_id | jq -r '.projectStatus.status')
        if [ $quality_status = "ERROR" ]; then
          content=$(echo "SonarQube analysis complete. Quality Gate Failed.\n\nTo see why, $sonar_link");
          $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;
        elif [ $quality_status = "OK" ]; then
          content=$(echo "SonarQube analysis complete. Quality Gate Passed.\n\nFor details, $sonar_link");
          #aws codecommit update-pull-request-approval-state --pull-request-id $PULL_REQUEST_ID --approval-state APPROVE --revision-id $REVISION_ID;
        else
          content="An unexpected error occurred while attempting to analyze with SonarQube.";
        fi
